{"version":3,"sources":["turbopack:///[project]/lib/i18n/config.ts","turbopack:///[project]/lib/i18n/detect-language.ts","turbopack:///[project]/lib/i18n/constants.ts","turbopack:///[next]/internal/font/google/geist_a71539c9.module.css [app-rsc] (css module)","turbopack:///[next]/internal/font/google/geist_mono_8d43a2aa.module.css [app-rsc] (css module)","turbopack:///[project]/components/ui/sonner.tsx/__nextjs-internal-proxy.mjs","turbopack:///[project]/context/language-context.tsx/__nextjs-internal-proxy.mjs","turbopack:///[next]/internal/font/google/geist_a71539c9.js","turbopack:///[next]/internal/font/google/geist_mono_8d43a2aa.js","turbopack:///[project]/app/layout.tsx"],"sourcesContent":["export const SUPPORTED_LANGUAGES = ['ko', 'en', 'ja'] as const;\n\nexport type SupportedLanguage = (typeof SUPPORTED_LANGUAGES)[number];\n\nexport const DEFAULT_LANGUAGE: SupportedLanguage = 'ko';\n\nexport const LANGUAGE_LABEL: Record<SupportedLanguage, string> = {\n  ko: '한국어',\n  en: 'English',\n  ja: '日本語',\n};\n","import { cookies, headers } from 'next/headers';\n\nimport { DEFAULT_LANGUAGE, SUPPORTED_LANGUAGES, type SupportedLanguage } from './config';\nimport { LANGUAGE_COOKIE } from './constants';\n\nexport function getSupportedLanguage(locale?: string | null): SupportedLanguage {\n  if (!locale) {\n    return DEFAULT_LANGUAGE;\n  }\n\n  const normalized = locale.toLowerCase().split('-')[0];\n  return (SUPPORTED_LANGUAGES.find((lang) => lang === normalized) ?? DEFAULT_LANGUAGE) as SupportedLanguage;\n}\n\nfunction detectFromClientContext(): SupportedLanguage | null {\n  if (typeof document !== 'undefined') {\n    const cookiesString = document.cookie;\n    if (cookiesString) {\n      const cookiePrefix = `${LANGUAGE_COOKIE}=`;\n      const match = cookiesString.split('; ').find((entry) => entry.startsWith(cookiePrefix));\n      if (match) {\n        const [, value] = match.split('=');\n        if (value) {\n          return getSupportedLanguage(decodeURIComponent(value));\n        }\n      }\n    }\n  }\n\n  if (typeof navigator !== 'undefined' && navigator.language) {\n    return getSupportedLanguage(navigator.language);\n  }\n\n  return null;\n}\n\nexport async function detectInitialLanguage(): Promise<SupportedLanguage> {\n  try {\n    const cookieStore = await cookies();\n    const cookieLang = cookieStore.get(LANGUAGE_COOKIE)?.value;\n    if (cookieLang) {\n      return getSupportedLanguage(cookieLang);\n    }\n\n    const requestHeaders = await headers();\n    const acceptLanguage = requestHeaders.get('accept-language');\n    if (acceptLanguage) {\n      const [first] = acceptLanguage.split(',');\n      if (first) {\n        return getSupportedLanguage(first);\n      }\n    }\n  } catch {\n    // Ignored when there is no request context available (e.g. during build).\n  }\n\n  const clientDetected = detectFromClientContext();\n  if (clientDetected) {\n    return clientDetected;\n  }\n\n  return DEFAULT_LANGUAGE;\n}\n","export const LANGUAGE_COOKIE = 'mission.lang';\n","__turbopack_context__.v({\n  \"className\": \"geist_a71539c9-module__T19VSG__className\",\n  \"variable\": \"geist_a71539c9-module__T19VSG__variable\",\n});\n","__turbopack_context__.v({\n  \"className\": \"geist_mono_8d43a2aa-module__8Li5zG__className\",\n  \"variable\": \"geist_mono_8d43a2aa-module__8Li5zG__variable\",\n});\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sonner.tsx\",\n    \"Toaster\",\n);\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const LanguageProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call LanguageProvider() from the server but LanguageProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/language-context.tsx\",\n    \"LanguageProvider\",\n);\nexport const useLanguage = registerClientReference(\n    function() { throw new Error(\"Attempted to call useLanguage() from the server but useLanguage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/language-context.tsx\",\n    \"useLanguage\",\n);\n","import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n","import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n","import type { Metadata } from 'next';\nimport { Geist, Geist_Mono } from 'next/font/google';\n\nimport { Toaster } from '@/components/ui/sonner';\nimport { LanguageProvider } from '@/context/language-context';\nimport { detectInitialLanguage } from '@/lib/i18n/detect-language';\n\nimport './globals.css';\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: '위루다 선교 기도 공동체',\n  description: '선교지 소식과 기도 제목을 나누고 함께 기도하는 온라인 공동체',\n};\n\nexport default async function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  const initialLanguage = await detectInitialLanguage();\n\n  return (\n    <html lang={initialLanguage}>\n      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>\n        <a href=\"#main-content\" className=\"skip-link\">\n          본문으로 바로가기\n        </a>\n        <LanguageProvider initialLanguage={initialLanguage}>\n          <div id=\"main-content\" className=\"min-h-screen focus:outline-none\">\n            {children}\n          </div>\n          <Toaster position=\"top-center\" richColors />\n        </LanguageProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":"0HAAO,IAAM,EAAsB,CAAC,KAAM,KAAM,KAAK,CAIxC,EAAsC,KAEtC,EAAoD,CAC/D,GAAI,MACJ,GAAI,UACJ,GAAI,KACN,qECVA,IAAA,EAAA,EAAA,CAAA,CAAA,MAEA,EAAA,EAAA,CAAA,CAAA,OCFO,IAAM,EAAkB,eDKxB,SAAS,EAAqB,CAAsB,EACzD,GAAI,CAAC,EACH,MADW,CACJ,EAAA,gBAAgB,CAGzB,IAAM,EAAa,EAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CACrD,OAAQ,EAAA,mBAAmB,CAAC,IAAI,CAAE,AAAD,GAAU,IAAS,IAAe,EAAA,gBAAgB,AACrF,CAwBO,eAAe,IACpB,GAAI,CACF,IAAM,EAAc,MAAM,CAAA,EAAA,EAAA,OAAA,AAAO,IAC3B,EAAa,EAAY,GAAG,CAAC,IAAkB,MACrD,GAAI,EACF,OAAO,EAAqB,CADd,EAKhB,IAAM,EAAiB,CADA,MAAM,CAAA,EAAA,EAAA,OAAO,AAAP,GAAO,EACE,GAAG,CAAC,mBAC1C,GAAI,EAAgB,CAClB,GAAM,CAAC,EAAM,CAAG,EAAe,KAAK,CAAC,KACrC,GAAI,EACF,KADS,EACF,EAAqB,EAEhC,CACF,CAAE,KAAM,CAER,CAEA,IAAM,EAAiB,AA1CzB,SAAS,EACP,GAAwB,aAApB,OAAO,SAA0B,CACnC,IAAM,EAAgB,SAAS,MAAM,CACrC,GAAI,EAAe,CACjB,IAAM,EAAe,CAAA,EAAG,EAAgB,CAAC,CAAC,CACpC,EAAQ,EAAc,KAAK,CAAC,MAAM,IAAI,CAAC,AAAC,GAAU,EAAM,UAAU,CAAC,IACzE,GAAI,EAAO,CACT,GAAM,EAAG,EAAM,CAAG,EAAM,KAAK,CAAC,KAC9B,GAAI,EACF,KADS,EACF,EAAqB,mBAAmB,GAEnD,CACF,CACF,OAEA,AAAyB,aAArB,OAAO,WAA6B,UAAU,QAAQ,CACjD,CADmD,CAC9B,UAAU,QAAQ,EAGzC,IACT,WAuBE,AAAI,GAIG,EAAA,WAJa,KAIG,AACzB,aE9DA,EAAA,CAAA,CAAA,CACA,UAAA,2CACA,SAAA,yCACA,cCHA,EAAA,CAAA,CAAA,CACA,UAAA,gDACA,SAAA,8CACA,kDCDO,IAAM,EAAU,CAAA,EADvB,AACuB,EADvB,CAAA,CAAA,OACuB,uBAAA,AAAuB,EAC1C,WAAa,MAAM,AAAI,MAAM,4NAA8N,EAC3P,yDACA,0DAHG,IAAM,EAAU,CAAA,EADvB,AACuB,EADvB,CAAA,CAAA,OACuB,uBAAA,AAAuB,EAC1C,WAAa,MAAM,AAAI,MAAM,4NAA8N,EAC3P,qCACA,iJCJJ,IAAA,EAAA,EAAA,CAAA,CAAA,OACO,IAAM,EAAmB,CAAA,EAAA,EAAA,uBAAA,AAAuB,EACnD,WAAa,MAAM,AAAI,MAAM,8OAAgP,EAC7Q,6DACA,oBAES,EAAc,CAAA,EAAA,EAAA,uBAAA,AAAuB,EAC9C,WAAa,MAAM,AAAI,MAAM,oOAAsO,EACnQ,6DACA,2FATJ,IAAA,EAAA,EAAA,CAAA,CAAA,OACO,IAAM,EAAmB,CAAA,EAAA,EAAA,uBAAA,AAAuB,EACnD,WAAa,MAAM,AAAI,MAAM,8OAAgP,EAC7Q,yCACA,oBAES,EAAc,CAAA,EAAA,EAAA,uBAAA,AAAuB,EAC9C,WAAa,MAAM,AAAI,MAAM,oOAAsO,EACnQ,yCACA,gKCVJ,EAAA,EAAA,CAAA,CAAA,OACA,IAAM,EAAW,CACb,UAAW,EAAA,OAAS,CAAC,SAAS,CAC9B,MAAO,CACH,WAAY,4BACZ,UAAW,QAEf,CACJ,CAE0B,MAAM,CAA5B,EAAA,OAAS,CAAC,QAAQ,GAClB,EAAS,QAAQ,CAAG,EAAA,OAAS,CAAC,QAAA,AAAQ,ECX1C,IAAA,EAAA,EAAA,CAAA,CAAA,OACA,IAAM,EAAW,CACb,UAAW,EAAA,OAAS,CAAC,SAAS,CAC9B,MAAO,CACH,WAAY,sCACZ,UAAW,QAEf,CACJ,CAE0B,MAAM,CAA5B,EAAA,OAAS,CAAC,QAAQ,GAClB,EAAS,QAAQ,CAAG,EAAA,OAAS,CAAC,QAAA,AAAQ,ECR1C,IAAA,EAAA,EAAA,CAAA,CAAA,MACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OAcO,IAAM,EAAqB,CAChC,MAAO,gBACP,YAAa,oCACf,EAEe,eAAe,EAAW,UACvC,CAAQ,CAGR,EACA,IAAM,EAAkB,MAAM,CAAA,EAAA,EAAA,qBAAA,AAAqB,IAEnD,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,KAAM,WACV,CAAA,EAAA,EAAA,IAAA,EAAC,OAAA,CAAK,UAAW,CAAA,EAAG,AFnBX,EEmBqB,QAAQ,CAAC,CAAC,EDnB/B,ACmBiC,EAAU,QAAQ,CAAC,YAAY,CAAC,WACxE,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,KAAK,gBAAgB,UAAU,qBAAY,cAG9C,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,gBAAgB,CAAA,CAAC,gBAAiB,YACjC,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,GAAG,eAAe,UAAU,2CAC9B,IAEH,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAO,CAAA,CAAC,SAAS,aAAa,UAAU,CAAA,CAAA,WAKnD","ignoreList":[3,4,5,6,7,8]}