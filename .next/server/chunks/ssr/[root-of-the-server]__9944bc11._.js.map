{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/build/webpack/loaders/next-flight-loader/server-reference.ts","turbopack:///[project]/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-validate.ts","turbopack:///[project]/lib/storage/utils.ts","turbopack:///[project]/app/(admin)/admin/devotions/actions.ts","turbopack:///[project]/.next-internal/server/app/(admin)/admin/devotions/[id]/page/actions.js (server actions loader)","turbopack:///[project]/app/(admin)/admin/devotions/[id]/page.tsx"],"sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nexport { registerServerReference } from 'react-server-dom-webpack/server'\n","// This function ensures that all the exported values are valid server actions,\n// during the runtime. By definition all actions are required to be async\n// functions, but here we can only check that they are functions.\nexport function ensureServerEntryExports(actions: any[]) {\n  for (let i = 0; i < actions.length; i++) {\n    const action = actions[i]\n    if (typeof action !== 'function') {\n      throw new Error(\n        `A \"use server\" file can only export async functions, found ${typeof action}.\\nRead more: https://nextjs.org/docs/messages/invalid-use-server-value`\n      )\n    }\n  }\n}\n","const FALLBACK_IMAGE_BUCKET = 'content-images';\n\nexport const SUPABASE_IMAGE_BUCKET = process.env.NEXT_PUBLIC_SUPABASE_IMAGE_BUCKET ?? FALLBACK_IMAGE_BUCKET;\n\ntype StorageLocation = {\n  bucket: string;\n  path: string;\n};\n\n/**\n * Extracts storage bucket and object path from a public Supabase Storage URL.\n * Returns null when the URL targets a different project/bucket or is malformed.\n */\nexport function parsePublicStorageUrl(publicUrl: string): StorageLocation | null {\n  if (!publicUrl) {\n    return null;\n  }\n\n  try {\n    const url = new URL(publicUrl);\n    const segments = url.pathname.split('/').filter(Boolean);\n    const publicIndex = segments.findIndex((segment) => segment === 'public');\n\n    if (publicIndex === -1) {\n      return null;\n    }\n\n    const bucket = decodeURIComponent(segments[publicIndex + 1] ?? '');\n    const pathSegments = segments.slice(publicIndex + 2).map((segment) => decodeURIComponent(segment));\n    const path = pathSegments.join('/');\n\n    if (!bucket || !path) {\n      return null;\n    }\n\n    return {\n      bucket,\n      path,\n    };\n  } catch (error) {\n    console.error('공개 스토리지 URL 파싱 실패', error);\n    return null;\n  }\n}\n\ntype StorageCapableClient = {\n  storage: {\n    from(bucket: string): {\n      remove(paths: string[]): Promise<{ data: unknown; error: unknown }>;\n    };\n  };\n};\n\nexport async function removePublicStorageFile(\n  supabase: StorageCapableClient,\n  publicUrl: string,\n  options: { expectedBucket?: string } = {},\n) {\n  const location = parsePublicStorageUrl(publicUrl);\n  if (!location) {\n    return;\n  }\n\n  const expectedBucket = options.expectedBucket ?? SUPABASE_IMAGE_BUCKET;\n  if (expectedBucket && location.bucket !== expectedBucket) {\n    return;\n  }\n\n  const { error } = await supabase.storage.from(location.bucket).remove([location.path]);\n\n  if (error) {\n    console.error('스토리지 객체 삭제 실패', error);\n  }\n}\n","'use server';\n\nimport { revalidatePath } from 'next/cache';\n\nimport { requireRole } from '@/lib/auth/session';\nimport { createSupabaseServerClient } from '@/lib/supabase/server';\nimport { logError } from '@/lib/monitoring/logger';\nimport { removePublicStorageFile } from '@/lib/storage/utils';\nimport type { Database } from '@/types/supabase';\n\ntype DevotionId = Database['public']['Tables']['devotions']['Row']['id'];\ntype DevotionImageRow = Pick<Database['public']['Tables']['devotions']['Row'], 'id' | 'image_url'>;\n\nexport async function deleteDevotionAdminAction(formData: FormData): Promise<void> {\n  await requireRole('admin');\n\n  const devotionId = formData.get('devotionId');\n\n  if (typeof devotionId !== 'string') {\n    throw new Error('잘못된 요청입니다.');\n  }\n  const parsedDevotionId: DevotionId = devotionId;\n\n  const supabase = await createSupabaseServerClient();\n  const { data: devotion, error: fetchError } = await supabase\n    .from('devotions')\n    .select('id,image_url')\n    .match({ id: parsedDevotionId })\n    .maybeSingle<DevotionImageRow>();\n\n  if (fetchError) {\n    logError('관리자 묵상 삭제 전 조회 실패', { error: fetchError, devotionId });\n  }\n\n  const { error } = await supabase.from('devotions').delete().match({ id: parsedDevotionId });\n\n  if (error) {\n    logError('관리자 묵상 삭제 실패', { error, devotionId });\n    throw new Error('묵상을 삭제하지 못했습니다.');\n  }\n\n  const imageUrl = devotion?.image_url ?? null;\n\n  if (imageUrl) {\n    await removePublicStorageFile(supabase, imageUrl);\n  }\n\n  revalidatePath('/admin/devotions');\n  revalidatePath(`/admin/devotions/${parsedDevotionId}`);\n}\n","export {deleteDevotionAdminAction as '40328e69a8742da95755898822bad7c69b676d071a'} from 'ACTIONS_MODULE0'\n","import Image from 'next/image';\nimport { notFound } from 'next/navigation';\n\nimport { Button } from '@/components/ui/button';\nimport { Separator } from '@/components/ui/separator';\nimport { getDevotionById } from '@/lib/data/devotion';\nimport { detectInitialLanguage } from '@/lib/i18n/detect-language';\nimport { formatDate } from '@/lib/utils/date';\nimport { deleteDevotionAdminAction } from '@/app/(admin)/admin/devotions/actions';\n\ntype AdminDevotionDetailPageProps = {\n  params: {\n    id: string;\n  };\n};\n\nexport default async function AdminDevotionDetailPage({ params }: AdminDevotionDetailPageProps) {\n  const language = await detectInitialLanguage();\n\n  const devotion = await getDevotionById(params.id);\n\n  if (!devotion) {\n    notFound();\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col gap-3 md:flex-row md:items-center md:justify-between\">\n        <div>\n          <h2 className=\"text-xl font-semibold text-slate-900\">묵상 상세 관리</h2>\n          <p className=\"text-sm text-muted-foreground\">작성자 정보를 확인하고 필요 시 묵상을 삭제할 수 있습니다.</p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button asChild variant=\"outline\">\n            <a href={`/devotion/${devotion.id}`} target=\"_blank\" rel=\"noreferrer\">\n              공개본 보기\n            </a>\n          </Button>\n          <form action={deleteDevotionAdminAction}>\n            <input type=\"hidden\" name=\"devotionId\" value={devotion.id} />\n            <Button type=\"submit\" variant=\"destructive\">\n              삭제\n            </Button>\n          </form>\n        </div>\n      </div>\n\n      <Separator />\n\n      {devotion.imageUrl && (\n        <div className=\"relative h-64 overflow-hidden rounded-2xl border border-border/60\">\n          <Image\n            src={devotion.imageUrl}\n            alt=\"묵상 대표 이미지\"\n            fill\n            className=\"object-cover\"\n            sizes=\"(min-width: 1024px) 50vw, 100vw\"\n          />\n        </div>\n      )}\n\n      <section className=\"space-y-4\">\n        <div>\n          <p className=\"text-xs text-muted-foreground\">작성일</p>\n          <p className=\"text-sm text-slate-900\">{formatDate(devotion.publishedAt, language)}</p>\n        </div>\n        <div>\n          <p className=\"text-xs text-muted-foreground\">제목</p>\n          <p className=\"text-lg font-semibold text-slate-900\">{devotion.title}</p>\n        </div>\n        <div>\n          <p className=\"text-xs text-muted-foreground\">성경 구절</p>\n          <p className=\"font-medium text-slate-900\">{devotion.scriptureRef}</p>\n          <p className=\"mt-2 rounded-lg bg-muted/30 p-4 text-sm text-muted-foreground\">{devotion.scriptureText}</p>\n        </div>\n        <article className=\"prose prose-slate max-w-none rounded-xl border border-border/60 bg-white p-6\">\n          <div dangerouslySetInnerHTML={{ __html: devotion.body }} />\n        </article>\n      </section>\n\n      <Separator />\n\n      <section className=\"space-y-2 text-sm text-muted-foreground\">\n        <p className=\"font-semibold text-slate-900\">작성자 정보</p>\n        <p>이름: {devotion.authorName}</p>\n        <p>역할: {devotion.authorRole}</p>\n        <p>상태: {devotion.authorStatus}</p>\n        <p>조회수: {devotion.views}</p>\n      </section>\n    </div>\n  );\n}\n"],"names":["registerServerReference","ensureServerEntryExports","actions","i","length","action","Error"],"mappings":"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","ignoreList":[0,1]}